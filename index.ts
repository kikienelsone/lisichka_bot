import {Bot, Context, InputFile, session, type SessionFlavor} from "grammy";
import type {ScenesFlavor, ScenesSessionData} from "grammy-scenes";
import {generate, getToken, picGeneration} from "./Requests.ts";
import {getUsersId} from "./UsersId.ts";

type SessionData = ScenesSessionData & {

}

export type BotContext = Context & SessionFlavor<SessionData> & ScenesFlavor

const bot = new Bot<BotContext>(process.env.TOKEN)

export function initial(): SessionData {
    return {

    };
}

bot.use(session({initial}))
bot.command("start", async (ctx) => {
    await ctx.reply("–ü—Ä–∏–≤–µ—Ç! –Ø –ë–æ—Ç –õ–∏—Å–∏—á–∫–∞, —è –º–æ–≥—É —Å–æ–∑–¥–∞—Ç—å —Ç–µ–±–µ –ª—é–±—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–±–æ–ª—Ç–∞—Ç—å —Å —Ç–æ–±–æ–π üß°")
});
bot.hears(/@lisichka_craba_bot/gi,  async (ctx) => {
    const userRequest = ctx.message?.text?.split("@lisichka_craba_bot")[1]
   await ctx.reply("–ò–¥—É –∏—Å–∫–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—ÉüëÄ", {
        reply_parameters: {message_id: ctx.msg.message_id}
    })
    getToken().then((token) => {
        generate({
            prompt: userRequest ?? "",
            modelId: token
        }).then((uuid) => {
            picGeneration(uuid).then(async (picture) => {
                const pic = picture?.replace(/^data:image\/w+;base64,/, '') ?? ""
                const file = Buffer.from(pic, 'base64')
               await ctx.replyWithPhoto(new InputFile(file))
        })
        })
    })

})

bot.on("message:media", async (ctx) => {
    await ctx.react("üòç")
})
bot.on("message:text", async (ctx) => {
    const userId = ctx.from.id
    const userRequest = ctx.message?.text
    const thunk = /—Å–ø–∞—Å–∏–±–æ/gi
    const hello = /–ø—Ä–∏–≤–µ—Ç/gi
    console.log(userId, userRequest)
    if (userRequest?.match(hello)){
        await ctx.reply(`–ü—Ä–∏–≤–µ—Ç ${getUsersId(userId)}üëã`, {
            reply_parameters: {message_id: ctx.msg.message_id}
        })
    }
    if (userRequest?.match(thunk)){
        await ctx.react("üëç")
    }

})

await bot.api.sendMessage(496131654, "–∫–∞–∫–∞—à–∫–∞")

// bot.use(scenes)
void bot.start()